drop database m_movie;

create database m_movie;

use m_movie;

create table actor(act_id int,
act_name varchar(20),
act_gender varchar(1),
primary key(act_id));
 desc actor;

create table director(
dir_id int,
dir_name varchar(20),
dir_phone varchar(10),
primary key(dir_id));
desc director;

create table movies(
mov_id int,
mov_title varchar(20),
mov_year varchar(10),
mov_lang varchar(20),
dir_id int,
primary key(mov_id),
foreign key(dir_id) references director(dir_id));
desc movies;

create table movie_cast(
act_id int,
mov_id int,
role varchar(20),
foreign key(act_id) references actor(act_id),
foreign key(mov_id) references movies(mov_id));
desc movie_cast;

create table rating(
mov_id int,
rev_stars int,
foreign key(mov_id) references movies(mov_id));
desc rating;

INSERT INTO actor (act_id, act_name, act_gender) VALUES ('101', 'Varun Dhavan', 'M');
INSERT INTO actor (act_id, act_name, act_gender) VALUES ('102', 'shraddha kapoor', 'F');
INSERT INTO actor (act_id, act_name, act_gender) VALUES ('103', 'Shahid', 'M');
INSERT INTO actor (act_id, act_name, act_gender) VALUES ('104', 'Akshay', 'M');
INSERT INTO actor (act_id, act_name, act_gender) VALUES ('105', 'Deepika', 'F');
select * from actor;

INSERT INTO director (dir_id, dir_name, dir_phone) VALUES ('11', 'Karan ', '8987565412');
INSERT INTO director (dir_id, dir_name, dir_phone) VALUES ('12', 'HitchCock', '7865254589');
INSERT INTO director (dir_id, dir_name, dir_phone) VALUES ('13', 'Rajamouli ', '9768483512');
INSERT INTO director (dir_id, dir_name, dir_phone) VALUES ('14', 'Remo ', '8987565412');
INSERT INTO director (dir_id, dir_name, dir_phone) VALUES ('15', 'steven splielberg ', '9868483512');
select * from director;

INSERT INTO movies (mov_id, mov_title, mov_year, mov_lang, dir_id) VALUES ('1001', 'Street Dancers', '2020-01-20', 'English', '14');
INSERT INTO movies (mov_id, mov_title, mov_year, mov_lang, dir_id) VALUES ('1002', 'Bahubali', '2015-03-31', 'Telagu', '13');
INSERT INTO movies (mov_id, mov_title, mov_year, mov_lang, dir_id) VALUES ('1003', 'War House', '1999-01-03', 'English', '12');
INSERT INTO movies (mov_id, mov_title, mov_year, mov_lang, dir_id) VALUES ('1004', 'Akash', '2008-11-04', 'Kannada', '11');
INSERT INTO movies (mov_id, mov_title, mov_year, mov_lang, dir_id) VALUES ('1005', 'Street Dancers', '2020-01-20', 'Hindi', '15');
select * from movies;

INSERT INTO movie_cast (act_id, mov_id, role) VALUES ('101', '1001', 'Hero');
INSERT INTO movie_cast (act_id, mov_id, role) VALUES ('102', '1002', 'Heroine');
INSERT INTO movie_cast (act_id, mov_id, role) VALUES ('103', '1003', 'Hero');
INSERT INTO movie_cast (act_id, mov_id, role) VALUES ('104', '1004', 'Hero');
INSERT INTO movie_cast (act_id, mov_id, role) VALUES ('101', '1005', 'Hero');
select * from movie_cast;

INSERT INTO rating (mov_id, rev_stars) VALUES ('1001', '5');
INSERT INTO rating (mov_id, rev_stars) VALUES ('1002', '1');
INSERT INTO rating (mov_id, rev_stars) VALUES ('1003', '4');
INSERT INTO rating (mov_id, rev_stars) VALUES ('1004', '2');
INSERT INTO rating (mov_id, rev_stars) VALUES ('1005', '3');
select * from rating;


-- 1. List the titles of all movies directed by ‘Hitchcock’.
   SELECT MOV_TITLE FROM MOVIES WHERE DIR_ID IN (SELECT DIR_ID FROM DIRECTOR WHERE DIR_NAME = 'HITCHCOCK');

-- 2. Find the movie names where one or more actors acted in two or more movies.
   SELECT MOV_TITLE FROM MOVIES M, MOVIE_CAST MV WHERE M.MOV_ID=MV.MOV_ID AND ACT_ID IN (SELECT ACT_ID FROM MOVIE_CAST GROUP BY ACT_ID HAVING count(ACT_ID)>=1) GROUP BY MOV_TITLE HAVING count(mov_title)>1;

-- 3. List all actors who acted in a movie before 2000 and also in a movie after 2015 (use JOIN operation).
   SELECT ACT_NAME, MOV_TITLE, MOV_YEAR FROM ACTOR A JOIN MOVIE_CAST C ON A.ACT_ID=C.ACT_ID JOIN MOVIES M ON C.MOV_ID=M.MOV_ID WHERE M.MOV_YEAR NOT BETWEEN 2000 AND 2015;

-- 4. Find the title of movies and number of stars for each movie that has at least one rating and find the highest number of stars that movie received. Sort the result by movie title.
   SELECT m.MOV_TITLE, max(r.rev_stars) FROM MOVIES m natural join RATING r where r.rev_stars>=1  GROUP BY m.MOV_TITLE  ORDER BY m.MOV_TITLE;
-- 5. Update rating of all movies directed by ‘Steven Spielberg’ to 5
   UPDATE RATING SET REV_STARS=5 WHERE MOV_ID IN (SELECT MOV_ID FROM MOVIES WHERE DIR_ID IN (SELECT DIR_ID FROM DIRECTOR WHERE DIR_NAME = 'STEVEN SPIELBERG'));

commit;
